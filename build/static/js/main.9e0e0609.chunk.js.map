{"version":3,"sources":["components/MainScreen.js","components/PermissonScreen.js","components/SettingsModal.js","components/CameraScreen.js","PhotoBooth.js","index.js"],"names":["MainScreen","setScreenToShow","className","src","alt","onClick","PermissonScreen","screen","window","innerWidth","orientation","alert","SettingsModal","setShowModal","setIsTimerSet","isTimerSet","setIsFullScreen","isFullScreen","type","name","onChange","e","target","checked","element","document","documentElement","check","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","facingMode","FACING_MODES","USER","idealResolution","width","height","RotateDevicePop","CameraScreen","useState","isCameraReady","setIsCameraReady","photoTaken","setPhotoTaken","imageToDownload","setImageToDownload","showModal","counter","setCounter","showCounter","setShowCounter","videoRef","useRef","cameraPhoto","CameraPhoto","current","useEffect","startCamera","addEventListener","popUp","querySelector","style","display","idealFacingMode","then","console","log","catch","error","displayPicture","uri","canvas","getElementById","ctx","getContext","image","Image","onload","drawImage","frame","toDataURL","ref","autoPlay","id","clearRect","download","href","config","sizeFactor","setTimeout","dataUri","getDataUri","disabled","PhotoBooth","screenToShow","rootDiv","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e0e0609.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './mainScreen.css';\r\nimport './animate.compat.css';\r\n\r\nconst MainScreen = ({ setScreenToShow }) => {\r\n\r\n    return (\r\n        <div className=\"main-container_main animated fadeIn\">\r\n            <header className=\"header_main\">\r\n                <section className=\"title-section_main\">\r\n                    <div className=\"logo-wrapper_main\">\r\n                        <img\r\n                            src=\"./assets/images/logo.png\"\r\n                            alt=\"preview\"\r\n                        />  \r\n                    </div> \r\n                </section>\r\n                <section className=\"btn-section_main\">\r\n                <div \r\n                    className=\"start-wrapper_main\"\r\n                    onClick={ () => setScreenToShow('permisson') }\r\n                >\r\n                    <h1>\r\n                        <span >¡Bienvenido, ██</span> <br />\r\n                        ██ comienza aquí!\r\n                    </h1>\r\n                </div>\r\n                </section>\r\n            </header>\r\n\r\n            <main className=\"main_main\">\r\n                <div className=\"preview-wrapper_main\">\r\n                    <img\r\n                        src=\"./assets/images/preview.png\"\r\n                        alt=\"preview\"\r\n                    />\r\n                </div>\r\n\r\n                <h2>Así se verá tu foto</h2>\r\n            </main>\r\n\r\n            <div className='logo-poto'>\r\n                <img src=\"./assets/images/foto2.png\" />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nMainScreen.propTypes = {\r\n    setScreenToShow: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './permissonScreen.css';\r\nimport './animate.compat.css';\r\n\r\nconst PermissonScreen = ({ setScreenToShow }) => {\r\n\r\n    const handleActivateCamera = (screen) => {\r\n        \r\n        if(window.innerWidth < 1200 && window.orientation == 0) {\r\n            alert('Por favor gira tu dispositivo');\r\n        } else {\r\n            setScreenToShow(screen);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-container_permisson animated fadeIn\">\r\n            <header className=\"header_permisson\">\r\n                <div className=\"logo-wrapper_permisson\">\r\n                    <img\r\n                        src=\"./assets/images/logo.png\"\r\n                        alt=\"preview\"\r\n                    /> \r\n                </div>\r\n            </header>\r\n\r\n            <main className=\"main_permisson\">\r\n                <p className=\"up-p_permisson\">\r\n                    Si utilizas un dispositivo móvil (teléfono o tableta) <br/>\r\n                    por favor girar tu dispositivo horizontalmente antes de comenzar.\r\n                </p>\r\n\r\n                <div \r\n                    className=\"middle_permisson\"\r\n                    onClick={ () => handleActivateCamera('camera') }\r\n                >\r\n                    <div className=\"btn-wrapper_permison\">\r\n                        <img \r\n                            src=\"./assets/images/permisson-btn.png\"\r\n                            alt=\"hablitar camara\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <p className=\"down-p_permisson\">\r\n                    Las fotografías NO SON almacenadas, <br/>\r\n                    todo se ejecuta desde tu navegador\r\n                </p>\r\n            </main>\r\n\r\n            <div className='logo-poto'>\r\n                <img src=\"./assets/images/foto2.png\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPermissonScreen.propTypes = {\r\n    setScreenToShow: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PermissonScreen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './settingsModal.css';\r\n\r\nconst SettingsModal = ({ setShowModal, setIsTimerSet, isTimerSet, setIsFullScreen, isFullScreen }) => {\r\n\r\n    const handleTimerSet = (e) => {\r\n        setIsTimerSet(e.target.checked);\r\n    }\r\n\r\n    const handleFullScreen = (element, check) => {\r\n        if (check.target.checked) {\r\n            if (element.requestFullScreen) {\r\n                element.requestFullScreen();\r\n            } else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            } else if (element.webkitRequestFullScreen) {\r\n                element.webkitRequestFullScreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n\r\n        setIsFullScreen(check.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-bc\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"timer\"\r\n                        onChange={handleTimerSet}\r\n                        checked={isTimerSet}\r\n                    />\r\n                    <label>Temporizador</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"fullscreen\"\r\n                        onChange={(e) => handleFullScreen(document.documentElement, e)}\r\n                        checked={ isFullScreen }\r\n                    />\r\n                    <label>Pantalla completa</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <button\r\n                        onClick={() => setShowModal(false)}\r\n                    >Salir</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSettingsModal.propTypes = {\r\n    setShowModal: PropTypes.func.isRequired,\r\n    setIsTimerSet: PropTypes.func.isRequired,\r\n    isTimerSet: PropTypes.bool.isRequired,\r\n    setIsFullScreen: PropTypes.func.isRequired,\r\n    isFullScreen: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport CameraPhoto, { FACING_MODES } from 'jslib-html5-camera-photo';\r\n\r\nimport SettingsModal from './SettingsModal';\r\n\r\nimport './cameraScreen.css';\r\nimport './animate.compat.css';\r\n\r\n//Variables de configuracion de enfoque y resolucion de la camara\r\nconst facingMode = FACING_MODES.USER;\r\nconst idealResolution = { width: 640, height: 480 };\r\n\r\nconst CameraScreen = () => {\r\n\r\n    const [isCameraReady, setIsCameraReady] = useState(false);\r\n    const [photoTaken, setPhotoTaken] = useState(false);\r\n    const [imageToDownload, setImageToDownload] = useState('#');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isTimerSet, setIsTimerSet] = useState(false);\r\n    const [isFullScreen, setIsFullScreen] = useState(false);\r\n    const [counter, setCounter] = useState(3);\r\n    const [showCounter, setShowCounter] = useState(false);\r\n    \r\n\r\n    //Crear referencia para tomar el html de video\r\n    const videoRef = useRef();\r\n    let cameraPhoto = new CameraPhoto(videoRef.current);\r\n\r\n    useEffect(() => {\r\n        //Instanciar la libreria e iniciar la camara\r\n        cameraPhoto = new CameraPhoto(videoRef.current);\r\n        startCamera(facingMode, idealResolution);\r\n            \r\n        if(window.innerWidth < 1200) {\r\n            window.addEventListener(\"orientationchange\", (e) => {\r\n                const popUp = document.querySelector('.rotatePop');\r\n\r\n                if(window.orientation == 0) {\r\n                    popUp.style.display = 'flex';    \r\n                } else {\r\n                    popUp.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [])\r\n\r\n    const startCamera = (idealFacingMode, idealResolution) => {\r\n        cameraPhoto.startCamera(idealFacingMode, idealResolution)\r\n            .then(() => {\r\n                console.log('camera is started !');\r\n                setIsCameraReady(true);\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n    }\r\n\r\n    // Pintar foto en canvas\r\n    const displayPicture = (uri) => {\r\n\r\n        const canvas = document.getElementById('photo');\r\n        const ctx = canvas.getContext('2d');\r\n    \r\n        const image = new Image();\r\n        \r\n        image.onload = function() {\r\n            ctx.drawImage(image, canvas.width * 0.1, 0, 470, 350);\r\n\r\n            const frame = new Image();\r\n        \r\n            frame.onload = function() {\r\n                ctx.drawImage(frame, 0, 0, 670, 350);\r\n                setImageToDownload(canvas.toDataURL('image/jpg'));\r\n            };\r\n\r\n            frame.src = './assets/images/frame.png';\r\n        };\r\n        \r\n        image.src = uri;\r\n\r\n    };\r\n\r\n    // Tomar la foto\r\n    const takePhoto = () => {\r\n        const config = {\r\n            sizeFactor: 1\r\n        };\r\n\r\n        if(isTimerSet) { //Cuando se activa el temporizador\r\n\r\n            setShowCounter(true);\r\n\r\n            setTimeout(() => { setCounter(2) }, 1000);\r\n            setTimeout(() => { setCounter(1) }, 2000);\r\n\r\n            setTimeout(() => {\r\n                const dataUri = cameraPhoto.getDataUri(config);\r\n                \r\n                displayPicture(dataUri);\r\n                setPhotoTaken(true);\r\n            }, 3000);\r\n        } else {\r\n            const dataUri = cameraPhoto.getDataUri(config);\r\n            \r\n            displayPicture(dataUri);\r\n            setPhotoTaken(true);\r\n        }\r\n    }\r\n\r\n    //Reiniciar camara \r\n    const restartCamera = () => {\r\n        // Limpiar canvas, contador de timer y volver a mostrar la camara\r\n        setPhotoTaken(false);\r\n        setCounter(3);\r\n        setShowCounter(false);\r\n\r\n        const canvas = document.getElementById('photo');\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    };\r\n\r\n    return (\r\n        \r\n        \r\n        <div className=\"main-container_camera animated fadeIn\">\r\n            <div className='logo-poto1'>\r\n                <img src=\"./assets/images/logo.png\" />\r\n            </div>\r\n            <RotateDevicePop />\r\n            \r\n            {\r\n                photoTaken && \r\n                <h2 className=\"blue animated fadeInLeft\">\r\n                    <span className=\"pink\">¡Te ves genial! ████</span> <br />\r\n                    ████ Guarda tu foto\r\n                </h2>\r\n            }\r\n\r\n            <div className=\"video-wrapper_camera\">\r\n                <div \r\n                    className=\"initial-img_camera\"\r\n                    style={{ display: photoTaken ? 'none' : 'block' }}\r\n                >\r\n                    <img src=\"./assets/images/frame.png\" alt=\"marco\"/>\r\n                    <video\r\n                        ref={videoRef}\r\n                        autoPlay={true}\r\n                    />  \r\n                    \r\n                    {\r\n                        (showCounter) &&\r\n                        <div className=\"timer_camera\">\r\n                            { counter }\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <canvas \r\n                    className=\"animated fadeIn\"\r\n                    id=\"photo\" \r\n                    width=\"650\" \r\n                    height=\"350\"\r\n                    style={{ display: photoTaken ? 'block' : 'none' }}\r\n                ></canvas>\r\n            </div>\r\n            <div className='logo-poto'>\r\n                <img src=\"./assets/images/foto2.png\" />\r\n            </div>\r\n\r\n            {\r\n                !photoTaken \r\n                ?\r\n                    <div className=\"btns-wrapper_camera\">\r\n                        <div className=\"div-wrapper\">\r\n                            <button\r\n                                className=\"settings-btn_camera\"\r\n                                onClick={() => setShowModal(true)}\r\n                            ></button>\r\n                            <button\r\n                                className=\"take-btn_camera\"\r\n                                onClick={ takePhoto }\r\n                                disabled={ !isCameraReady }\r\n                            ></button>\r\n                        </div>\r\n                    </div>\r\n                :\r\n                    <div className=\"btns-wrapper_camera\">\r\n                        <div className=\"div-wrapper\">\r\n                            <div className='trie'>\r\n                                <button\r\n                                    className=\"try-btn_camera\"\r\n                                    onClick={ restartCamera }\r\n                                    ></button>\r\n                                {/* <p className=\"blue\">Descarta esta foto <br /> e intenta de nuevo</p> */}\r\n                            </div>\r\n                            <div className='guardar'>\r\n                                <a\r\n                                    id=\"download\"\r\n                                    className=\"save-btn_camera\"\r\n                                    download=\"selfie\"\r\n                                    href={ imageToDownload }\r\n                                ></a>\r\n                                {/* <p className=\"pink\">Guarda tu foto</p> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n            }\r\n\r\n            {/* MODAL DE CONFIGURACIONES */}\r\n            {\r\n                showModal &&\r\n                <SettingsModal \r\n                    setShowModal={ setShowModal } \r\n                    isTimerSet={ isTimerSet }\r\n                    setIsTimerSet={ setIsTimerSet }\r\n                    setIsFullScreen={ setIsFullScreen }\r\n                    isFullScreen={ isFullScreen }\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RotateDevicePop = () => {\r\n    return (\r\n        <div className=\"rotatePop\">\r\n            <div className=\"icon-box\">\r\n                <div className=\"icon-wrapper animated shakeX\">\r\n                    <img src=\"./assets/images/icon.png\" alt=\"rotate\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"text-box\">\r\n                <p>\r\n                    Por favor gira tu dispositivo\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CameraScreen;\r\n","import React, { useState } from 'react';\r\n\r\nimport MainScreen from './components/MainScreen';\r\nimport PermissonScreen from './components/PermissonScreen';\r\nimport CameraScreen from './components/CameraScreen';\r\n\r\nconst PhotoBooth = () => {\r\n\r\n    const [screenToShow, setScreenToShow] = useState('main');\r\n\r\n    return (\r\n        <>\r\n\r\n        {\r\n            (screenToShow === 'main') &&\r\n            <MainScreen \r\n                setScreenToShow={ setScreenToShow } \r\n            />\r\n        }\r\n\r\n        {\r\n            (screenToShow === 'permisson') &&\r\n            <PermissonScreen \r\n                setScreenToShow={ setScreenToShow } \r\n            />\r\n        }\r\n\r\n        {\r\n            (screenToShow === 'camera') &&\r\n            <CameraScreen />\r\n        }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default PhotoBooth;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PhotoBooth from './PhotoBooth';\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render(<PhotoBooth />, rootDiv);\n"],"sourceRoot":""}