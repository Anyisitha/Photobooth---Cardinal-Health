{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/pothoboot/src/components/SettingsModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './settingsModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsModal = ({\n  setShowModal,\n  setIsTimerSet,\n  isTimerSet,\n  setIsFullScreen,\n  isFullScreen\n}) => {\n  const handleTimerSet = e => {\n    setIsTimerSet(e.target.checked);\n  };\n\n  const handleFullScreen = (element, check) => {\n    if (check.target.checked) {\n      if (element.requestFullScreen) {\n        element.requestFullScreen();\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullScreen) {\n        element.webkitRequestFullScreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      }\n    }\n\n    setIsFullScreen(check.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-bc\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container_modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"timer\",\n          onChange: handleTimerSet,\n          checked: isTimerSet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Temporizador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container_modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"fullscreen\",\n          onChange: e => handleFullScreen(document.documentElement, e),\n          checked: isFullScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pantalla completa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container_modal\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowModal(false),\n          children: \"Salir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SettingsModal;\nSettingsModal.propTypes = {\n  setShowModal: PropTypes.func.isRequired,\n  setIsTimerSet: PropTypes.func.isRequired,\n  isTimerSet: PropTypes.bool.isRequired,\n  setIsFullScreen: PropTypes.func.isRequired,\n  isFullScreen: PropTypes.bool.isRequired\n};\nexport default SettingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsModal\");","map":{"version":3,"sources":["/Users/macuser/Desktop/pothoboot/src/components/SettingsModal.js"],"names":["React","PropTypes","SettingsModal","setShowModal","setIsTimerSet","isTimerSet","setIsFullScreen","isFullScreen","handleTimerSet","e","target","checked","handleFullScreen","element","check","requestFullScreen","mozRequestFullScreen","webkitRequestFullScreen","document","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","documentElement","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './settingsModal.css';\r\n\r\nconst SettingsModal = ({ setShowModal, setIsTimerSet, isTimerSet, setIsFullScreen, isFullScreen }) => {\r\n\r\n    const handleTimerSet = (e) => {\r\n        setIsTimerSet(e.target.checked);\r\n    }\r\n\r\n    const handleFullScreen = (element, check) => {\r\n        if (check.target.checked) {\r\n            if (element.requestFullScreen) {\r\n                element.requestFullScreen();\r\n            } else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            } else if (element.webkitRequestFullScreen) {\r\n                element.webkitRequestFullScreen();\r\n            }\r\n        } else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n\r\n        setIsFullScreen(check.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal-bc\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"timer\"\r\n                        onChange={handleTimerSet}\r\n                        checked={isTimerSet}\r\n                    />\r\n                    <label>Temporizador</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"fullscreen\"\r\n                        onChange={(e) => handleFullScreen(document.documentElement, e)}\r\n                        checked={ isFullScreen }\r\n                    />\r\n                    <label>Pantalla completa</label>\r\n                </div>\r\n                <div className=\"input-container_modal\">\r\n                    <button\r\n                        onClick={() => setShowModal(false)}\r\n                    >Salir</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nSettingsModal.propTypes = {\r\n    setShowModal: PropTypes.func.isRequired,\r\n    setIsTimerSet: PropTypes.func.isRequired,\r\n    isTimerSet: PropTypes.bool.isRequired,\r\n    setIsFullScreen: PropTypes.func.isRequired,\r\n    isFullScreen: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SettingsModal;\r\n"]},"metadata":{},"sourceType":"module"}